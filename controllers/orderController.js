const { supabase } = require('../config/db');

// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
const createOrder = async (req, res) => {
    try {
        const { orderItems, totalPrice, paymentMethod, shippingAddress } = req.body;

        console.log(req.body)

        console.log("üìù –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (req.body):", req.body);
        console.log("üõ† –ü—Ä–æ–≤–µ—Ä–∫–∞ orderItems:", req.body.orderItems);


        if (!orderItems || orderItems.length === 0) {
            return res.status(400).json({ message: 'No order items' });
        }

        console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:", req.user); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log("üîç –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π:", {
            user_id: req.user.id, // –î–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å auth.uid()
            order_items: orderItems,
            total_price: totalPrice,
            payment_method: paymentMethod,
            shipping_address: shippingAddress
        });

        // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ SELECT, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å RLS
        const { data: checkUser, error: checkError } = await supabase.auth.getUser(req.headers.authorization.split(' ')[1]);
        console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase auth:", checkUser, checkError);


        // –í—Å—Ç–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
        const { data, error } = await supabase
            .from('orders')
            .insert([{
                user_id: req.user.id, // –î–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å auth.uid()
                order_items: orderItems,
                total_price: totalPrice,
                payment_method: paymentMethod,
                shipping_address: shippingAddress
            }])
            .select();

        if (error) throw error;

        res.status(201).json({ message: 'Order created successfully', order: data });
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
        res.status(500).json({ message: 'Error creating order', error: error.message });
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const getUserOrders = async (req, res) => {
    try {
        const { data: orders, error } = await supabase
            .from('orders')
            .select('*')
            .eq('user_id', req.user.id);

        if (error) {
            throw error;
        }

        res.json(orders);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', error);
        res.status(500).json({ message: 'Error fetching orders', error: error.message });
    }
};

module.exports = { createOrder, getUserOrders };
